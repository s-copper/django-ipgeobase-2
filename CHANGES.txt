История изменений
=================

1.0.6
-----
* Поддержка python3 (python2 тоже поддерживается)
* Поддержка Django > 1.7 (Старые версии тоже поддерживаются)
* Truncate old rows (против Delete раньше)
* Добавлена колонка city_id: Внутренний Ipgeobase id города

1.0.5
-----
* Поддержка python3 (python2 тоже поддерживается)
* Поддержка Django > 1.7 (Старые версии тоже поддерживаются)
* Truncate old rows (против Delete раньше)

1.0.0-beta
-----
Переведено приложение на обновленную базу http://ipgeobase.ru/files/db/Main/geo_files.tar.gz.
Для переход на новую версию нужно выполнить:
./manage.py dbshell
ALTER TABLE django_ipgeobase_ipgeobase add country varchar(16) NOT NULL DEFAULT 'RU';
Изменить колонки district, region, city, latitude, longitude - убрать NOT NULL
Например, для PostgreSQL
ALTER TABLE django_ipgeobase_ipgeobase ALTER district DROP NOT NULL;
ALTER TABLE django_ipgeobase_ipgeobase ALTER region DROP NOT NULL;
ALTER TABLE django_ipgeobase_ipgeobase ALTER city DROP NOT NULL;
ALTER TABLE django_ipgeobase_ipgeobase ALTER latitude DROP NOT NULL;
ALTER TABLE django_ipgeobase_ipgeobase ALTER longitude DROP NOT NULL;
После этого запустить скрипт обновления данных
./manage.py ipgeobase_update

0.5.0
-----
Добавлена возможность отправлять информацию при ошибках выполнения команды обновления базы
Команда скачивания и обновления теперь находятся в одной команде ipgeobase_update

0.4.0
-----
Изменена модель - добавлена ширина и долгота

0.3.0
-----
Добавлен manager по получению объекта IpGeoBase по IP-адресу

0.2.0
-----
Добавлена команда для скачивания архива текстового файла с официального источника и его распаковки

0.1.0
-----
Добавлена команда для конвектирования текстового файла с IP-блоками в таблицу базы данных
